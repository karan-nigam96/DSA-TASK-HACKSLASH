#include<bits/stdc++.h>
using namespace std;
class browser{
    private:
    pair<pair<vector <string>,vector <string>>,string> tabs;
    int current_Tab;

    public:
    browser(){
        tabs.second=("www.homepage.com");
        current_Tab=0;
    }
    // Function to show tab visited
    void visit(string url){
        tabs.first.first.push_back(url);
        tabs.first.second.clear();
        cout<<"tab visited : "<< url <<endl;
    }
    // Function to move back in the browser 
    string move_back(int n){
        vector <string> history=tabs.first.first;
        if(n>=history.size()){
            tabs.first.first.clear();
            return "can't go back to the homepage ";
        }
        else{
            string url=history[history.size()-n];
            history.resize(history.size()-n);
            tabs.first.second.insert(tabs.first.second.begin(),tabs.first.first.end()-n+1,tabs.first.first.end());
            history.erase(history.end()-n+1,history.end());
            return url;
        }
    }
    // Function to move forward in the browser 
    string move_forward(int n){
        vector <string> forward=tabs.first.second;
        if(n>=forward.size()){
            return "can't go further after it.";
        }
        else{
            string url=forward[n-1];
            tabs.first.first.insert(tabs.first.second.end(),forward.begin(),forward.begin()+n);
            forward.erase(forward.begin(),forward.begin()+n);
            return url;
        }
    }
    // Function to change tabs 
    void changeTabs(){
        current_Tab=(current_Tab+1)%2;
        cout<<"Changed to tab "<< current_Tab + 1 <<endl;
    }
};
int main(){
    browser Browser;
    Browser.visit("www.google.com");
    cout<< Browser.move_back(1)<<endl;
    Browser.visit("www.linkedin.com");
    Browser.visit("www.facebook.com");
    cout<<Browser.move_back(2)<<endl;
    Browser.changeTabs();
    Browser.visit("www.instagram.com");
    cout<<Browser.move_forward(1)<<endl;
    return 0;
}